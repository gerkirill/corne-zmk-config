/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT_L 0
#define NUM_L 1
#define SYM_L  2
#define RSYM_L  3
#define BLT_L  4
#define ARR_L 5

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        we {
            bindings = <&kp ESCAPE>;
            key-positions = <3 2>;
        };

        ei {
            bindings = <&caps_word>;
            key-positions = <3 8>;
        };

        hy {
            bindings = <&kp LC(BACKSPACE)>;
            key-positions = <18 6>;
        };

        hn {
            bindings = <&kp LA(BACKSPACE)>;
            key-positions = <18 30>;
        };

        tg {
            bindings = <&kp SQT>;
            key-positions = <17 5>;
        };

        gb {
            bindings = <&kp DQT>;
            key-positions = <17 29>;
        };

        fr {
            bindings = <&kp MINUS>;
            key-positions = <16 4>;
        };

        fv {
            bindings = <&kp UNDER>;
            key-positions = <16 28>;
        };

        ju {
            bindings = <&kp PLUS>;
            key-positions = <19 7>;
        };

        jm {
            bindings = <&kp EQUAL>;
            key-positions = <19 31>;
        };

        h {
            bindings = <&sys_reset>;
            key-positions = <1 29>;
        };

        j {
            bindings = <&sys_reset>;
            key-positions = <30 10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "0";
            bindings = <
&none  &kp Q       &kp W        &kp E        &kp R            &kp T                 &kp Y   &kp U          &kp I         &kp O         &kp P           &none
&none  &hm LGUI A  &hm LALT S   &hm LCTRL D  &hm LSHIFT F     &kp G                 &kp H   &hm RSHIFT J   &hm RCTRL K   &hm LALT L    &hm RGUI SEMI   &none
&none  &kp Z       &hm RALT X   &kp C        &kp V            &kp B                 &kp N   &kp M          &kp COMMA     &hm RALT DOT  &kp FSLH        &none
                            &kp CLCK  &lt SYM_L SPACE  &lt NUM_L TAB         &lt ARR_L RET  &lt RSYM_L BSPC  &kp PSCRN
            >;
        };

        number_layer {
            label = "1";
            bindings = <
&none  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)  &kp LS(N6)  &kp LS(N7)  &kp LS(N8)  &kp MINUS   &kp EQUAL   &none
&none  &kp N1      &kp N2      &kp N3      &kp N4      &kp N5      &kp N6      &kp N7      &kp N8      &kp N9      &kp N0      &none
&none  &kp F1      &kp F2      &kp F3      &kp F4      &kp F5      &kp F6      &kp F7      &kp F8      &kp F9      &kp F10     &none
                                        &none   &trans   &trans     &trans   &trans   &none
            >;
        };

        symbol_layer {
            label = "2";
            bindings = <
&none  &kp ESC     &kp RBKT  &kp RPAR  &kp RBRC  &kp GT      &none       &none      &none     &none     &kp LBKT  &none
&none  &kp CLCK    &kp LBKT  &kp LPAR  &kp LBRC  &kp LT      &kp GT      &kp RBRC   &kp RPAR  &kp RBKT  &kp SQT   &none
&none  &kp LC(Z)   &kp LC(X) &kp LC(C) &kp LC(V) &none       &none       &none      &none     &none     &kp BSLH  &none
                                       &none   &trans   &trans     &trans   &trans   &none
            >;
        };

         rsymbol_layer {
            label = "3";
            bindings = <
&none  &none   &none   &none   &none   &none      &none   &none        &none       &none      &kp RBKT  &none
&none  &none   &none   &none   &none   &none      &none   &sk LSHIFT   &sk LCTRL   &sk LALT   &kp GRAVE &none
&none  &none   &none   &none   &none   &none      &none   &none        &none       &none      &kp PIPE  &none
                                 &none   &trans   &trans     &trans   &trans   &none
            >;
        };

        bt_layer {
            label = "4";
            bindings = <
&none       &kp N1        &kp N2          &kp N3        &kp N4        &kp N5         &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &none
&none       &none         &kp LEFT_ARROW  &kp DEL       &kp RIGHT     &bt BT_CLR     &none   &none   &none   &none   &none   &none
&none       &bt BT_SEL 3  &bt BT_SEL 2    &bt BT_SEL 1  &bt BT_SEL 0  &bootloader    &none   &none   &none   &none   &none   &none
                                       &none   &trans   &trans     &trans   &trans   &none
            >;
        };

        arrow_layer {
            label = "5";
            bindings = <
&none   &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)   &kp LS(N5)      &kp LS(N6)       &kp LS(N7)       &kp LS(N8)     &kp MINUS   &kp EQUAL   &none
&none   &kp LGUI    &kp LALT    &kp LCTRL   &kp LSHIFT   &none           &kp LEFT_ARROW   &kp DOWN_ARROW   &kp UP_ARROW   &kp RIGHT   &none       &none
&none   &none       &none       &none       &none        &none           &kp DEL          &kp HOME         &kp END        &none       &none       &none
                                         &none   &trans   &trans     &trans   &trans   &none
            >;
        };
    };
};
